{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/script.js"],"names":["x","Array","push","console","log"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;;AAEA;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAOA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,IAAIA,CAAC,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAR;AAIAD,CAAC,CAACE,IAAF,CAAO,CAAP;AACAC,OAAO,CAACC,GAAR,CAAYJ,CAAZ,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/script.js\");\n","// 1 Создать массив arr = [] и записать в него 7 любых многозначных \r\n// чисел в виде строк. Вывести в консоль только те, что начинаются с \r\n// цифры 3 или 7 (Должны присутствовать в массиве)\r\n\r\n/* let arr = [243, 11, 35, 0, 3000, 776, 910];\r\n\r\nlet sortFunc = (arr) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].toString()[0] == \"3\" || arr[i].toString()[0] == \"7\") {\r\n            console.log(arr[i]);\r\n        }\r\n    }\r\n};\r\nsortFunc(arr); */\r\n\r\n// 2 У вас есть str = “урок-3-был слишком легким”. Сделать так, чтобы строка \r\n// начиналась с большой буквы. Замените все “-” на пробелы. Вывести в консоль \r\n// то, что получилось. Из получившейся строки вырезать слово “легким”, в этом\r\n//  же слове заменить 2 последние буквы на букву “о”. Вывести на экран то, что\r\n// получилось\r\n\r\n/*let str = \"урок-3-был слишком легким\";\r\nstr = str[0].toUpperCase() + str.slice(1);\r\nstr = str.replace(/-/g, \" \");\r\nstr = str.slice(19);\r\nstr = str.replace(\"им\", \"о\");\r\nconsole.log(str);*/\r\n\r\n// 3 У вас есть массив arr = [20, 33, 1, “Человек”, 2, 3]. Вывести в консоль \r\n// квадратный корень из суммы кубов его элементов (Да, человека нужно исключить)\r\n\r\n/*let arr = [20, 33, \"1\", \"Человек\", 2, 3];\r\n\r\nlet account = (arr) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n\r\n        if (typeof(+arr[i]) == \"number\" && isNaN(arr[i]) !== true) {\r\n            arr[i] = arr[i]**3;\r\n        } else {\r\n            arr.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n    // console.log(arr);\r\n    \r\n    let result = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n        result = result + arr[i];\r\n    }\r\n    console.log(Math.sqrt(result));\r\n};\r\naccount(arr);*/\r\n\r\n// 4 Создайте функцию, которая принимает 1 аргумент (название произвольное)\r\n// Если как аргумент передана не строка - функция оповещает об этом пользователя\r\n// В полученной (как аргумент) строке функция должна убрать все пробелы в \r\n// начале и в конце. Если строка более 50 знаков - то после 50го символа часть \r\n// текста скрывается и вместо них появляются три точки (...)\r\n\r\n/*let x = \"  1234512345123451234512345123451234512345123451234512345  \";\r\n\r\nlet clearFucn = (x) => {\r\n\r\n    if (typeof (x) == \"string\") {\r\n\r\n        x = x.split(\"\");\r\n\r\n        x.reverse();\r\n\r\n        let revFunc = () => {\r\n            for (let i = 0; i < x.length; i++) {\r\n                if (x[i] == \" \") {\r\n                    x.splice(i, 1);\r\n                    i--;\r\n                } else {\r\n                    i = x.length - 1;\r\n                }\r\n            }\r\n        };\r\n\r\n        revFunc(x);\r\n        x.reverse();\r\n        revFunc(x);\r\n\r\n        if (x[50] !== undefined) {\r\n            \r\n            x = x.slice(0, 50); \r\n            x.push(\".\", \".\", \".\");\r\n        }\r\n        x = x.join(\"\");\r\n        console.log(x);\r\n    } else {\r\n        console.log(\"Аргумент передан не как строка\");\r\n    }\r\n};\r\nclearFucn(x);*/\r\n\r\nlet x = new Array(1);\r\n\r\n\r\n\r\nx.push(5);\r\nconsole.log(x);"],"sourceRoot":""}